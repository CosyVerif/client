worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

# wercker specific exports:
env POSTGRES_PORT_5432_TCP_ADDR;
env POSTGRES_ENV_POSTGRES_USER;
env POSTGRES_ENV_POSTGRES_PASSWORD;
env POSTGRES_ENV_POSTGRES_DATABASE;
env REDIS_PORT_6379_TCP_ADDR;
env REDIS_PORT_6379_TCP_PORT;
env AUTH0_DOMAIN;
env AUTH0_CLIENT;
env AUTH0_SECRET;
env AUTH0_API;
env NGINX_HOST=${{HOSTNAME}};
env NGINX_PORT=${{PORT}};
env DOCKER_TLS_VERIFY;
env DOCKER_API;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  resolver 8.8.8.8;

  server {
    server_name       "${{HOSTNAME}}";
    listen            "${{PORT}}";
    lua_code_cache    "${{CODE_CACHE}}";
    default_type      "application/json";
    keepalive_timeout 60;

    error_page 497 =200 $request_uri;
    error_page 404 = @empty;

    location @empty {
      return 404 "{}";
    }

    location / {
      set $_url "";
      default_type  "application/json";
      add_header    "Access-Control-Allow-Origin"      "*";
      add_header    "Access-Control-Allow-Credentials" true;
      add_header    "Access-Control-Allow-Methods"     "DELETE, HEAD, GET, OPTIONS, POST, PUT";
      add_header    "Access-Control-Max-Age"           1728000;
      content_by_lua_block {
        require "resty.core"
        require "lapis".serve "cosy.server"
      }
    }

    location /js {
      root "${{WWW_PREFIX}}";
      autoindex on;
    }
    location /css {
      root "${{WWW_PREFIX}}";
      autoindex on;
    }
    location /fonts {
      root "${{WWW_PREFIX}}";
      autoindex on;
    }
    location /lua {
      root          /;
      default_type  application/lua;
      set           $target   "";
      access_by_lua_block {
        local name     = ngx.var.uri:match "/lua/(.*)"
        local filename = package.searchpath (name, package.path)
        if filename then
          ngx.var.target = filename
        else
          return ngx.exit (404)
        end
      }
      try_files $target =404;
    }

  }

}
